
with-variant native os@-gdal-dev:[v] s-hdf5 s-netcdf os@-proj-dev \
             --env 'set-var GDAL_ROOT_DIR    /usr' \
                   'set-var GDAL_INCLUDE_DIR /usr/include/gdal' \
                   'set-var GDAL_LIBRARY     /usr/lib'

function s-gdal-vcs()
{
    echo edf
    echo none
    echo git
    echo https://github.com/OSGeo/gdal.git
}

function s-gdal-archive()
{
    local VERSION=$1

    echo default
    echo none
    echo wget
    echo https://minio.retd.edf.fr/salome/YAMM/Public/SALOME/sources/prerequis
    echo gdal-$VERSION.tar.gz
}

function s-gdal-cea-archive()
{
    local VERSION=$1

    echo default
    echo none
    echo wget
    echo ftp://ftp.cea.fr/pub/salome/prerequisites
    echo gdal-$VERSION.tar.gz
}

function s-gdal-mingw-patches()
{
    local PREFIX=$1
    local TARGET=$2
    local VARIANT=$3
    local KIND=$4
    local REF=$5

    echo gdal-3.2.2.msys2.patch
}

function s-gdal-build-depends()
{
    echo s-cmake
}

function s-gdal-out-of-tree()
{
    echo false
}

function s-gdal-depends()
{
    echo s-proj
    echo s-netcdf
    echo s-hdf5
}

function s-gdal-env()
{
    local PREFIX=$1
    local TARGET=$2

    set-var    GDAL_ROOT_DIR      $PREFIX
    set-var    GDAL_INCLUDE_DIR   $PREFIX/include
    set-var    GDAL_LIBRARY       $PREFIX/lib

    add-to-var C_INCLUDE_PATH     $PREFIX/include
    add-to-var CPLUS_INCLUDE_PATH $PREFIX/include
    add-to-var LIBRARY_PATH       $PREFIX/lib
    add-to-var LD_LIBRARY_PATH    $PREFIX/lib
}

function s-gdal-env()
{
    local PREFIX=$1
    local TARGET=$2

    set-var    GDAL_ROOT_DIR      $PREFIX
    set-var    GDAL_INCLUDE_DIR   $PREFIX/include
    set-var    GDAL_LIBRARY       $PREFIX/lib

    add-to-var C_INCLUDE_PATH     $PREFIX/include
    add-to-var CPLUS_INCLUDE_PATH $PREFIX/include
    add-to-var LIBRARY_PATH       $PREFIX/lib
    add-to-var LD_LIBRARY_PATH    $PREFIX/lib
    add-to-var PATH               $PREFIX/lib
    add-to-var PATH               $PREFIX/bin

}

function s-gdal-config()
{
    local PREFIX=$1
    local TARGET=$2

    cd ../src/gdal
    ./autogen.sh &&
        ./configure --with-netcdf=$NETCDF_ROOT_DIR \
                    --with-hdf5=$HDF5_ROOT_DIR \
                    --with-proj=$PROJ_ROOT_DIR \
                    --prefix=$PREFIX
}

function s-gdal-mingw-config()
{
    local PREFIX=$1
    local TARGET=$2
    local PYTHONBIN=$(which python)

    CONFIGURE_FLAGS=
	CONFIGURE_FLAGS+=" --with-pcraster=internal"
	CONFIGURE_FLAGS+=" --with-png=internal"
	CONFIGURE_FLAGS+=" --with-libtiff=internal"
	CONFIGURE_FLAGS+=" --with-geotiff=internal"
	CONFIGURE_FLAGS+=" --with-jpeg=internal"
	CONFIGURE_FLAGS+=" --with-gif=internal"
	CONFIGURE_FLAGS+=" --with-python=yes"
	CONFIGURE_FLAGS+=" --with-geos=yes"
	CONFIGURE_FLAGS+=" --with-sqlite3=yes"
	CONFIGURE_FLAGS+=" --with-threads"
	CONFIGURE_FLAGS+=" --with-python=${PYTHONBIN}"
	CONFIGURE_FLAGS+=" --with-hdf5=${HDF5_ROOT_DIR}"
	CONFIGURE_FLAGS+=" --with-netcdf=${NETCDF_ROOT_DIR}"
	CONFIGURE_FLAGS+=" --without-jasper"

    cd ../src/gdal
    ./configure \
		--prefix=$PREFIX \
		--host=x86_64-w64-mingw32 \
		${CONFIGURE_FLAGS} \
		LDFLAGS="-L${HDF5_ROOT_DIR}/lib/ -lhdf5 -lhdf5_hl -L${NETCDF_ROOT_DIR}/lib -lnetcdf" \
		HDF5_CFLAGS="-I${HDF5_ROOT_DIR}/include -L${HDF5_ROOT_DIR}/lib/ -lhdf5 -lhdf5_hl" \
		LIBS="-L${HDF5_ROOT_DIR}/lib/ -lhdf5 -lhdf5_hl -L${NETCDF_ROOT_DIR}/lib -lnetcdf" \
		HDF5_LIBS="-L${HDF5_ROOT_DIR}/lib/ -lhdf5  -lhdf5_hl " \
		HDF5_INCLUDE="-I${HDF5_ROOT_DIR}/include"
}

function s-gdal-build()
{
    local PREFIX=$1
    local TARGET=$2

    cd ../src/gdal
    make -j$SCBI_JOBS
}

function s-gdal-mingw-build()
{
    local PREFIX=$1
    local TARGET=$2

    cd ../src/gdal
    # tester avec make -j$SCBI_JOBS
    make
}

function s-gdal-install()
{
    local PREFIX=$1
    local TARGET=$2

    cd ../src/gdal
    make install
}

function s-gdal-prefix()
{
    echo NONE
}
