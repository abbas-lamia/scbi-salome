
function s-openturns-vcs()
{
    echo edf
    echo none
    echo git
    echo https://github.com/openturns/openturns.git
}

function s-openturns-archive()
{
    local VERSION=$1

    echo default
    echo none
    echo wget
    echo https://minio.retd.edf.fr/salome/YAMM/Public/SALOME/sources/prerequis
    echo openturns-$VERSION.tar.bz2
}

function s-openturns-mingw-patches()
{
    local PREFIX=$1
    local TARGET=$2
    local VARIANT=$3
    local KIND=$4
    local REF=$5

    echo openturns-1.22.msys2.patch
}

function s-openturns-common-build-depends()
{
    echo s-cmake
}

function s-openturns-default-build-depends()
{
    echo os@-xml2-utils
}

function s-openturns-ng-build-depends()
{
    echo s-salome-bin
}

function s-openturns-default-depends()
{
    echo os@-blas-dev
    echo os@-lapack-dev
    echo os@-python3
    echo os@-python3-dev
    echo os@-bz2-dev
    echo os@-python3-matplotlib
    echo os@-python3-numpy
    echo s-python3-nlopt
    # since 1.13
    echo os@-cminpack-dev
}

function s-openturns-env()
{
    local PREFIX=$1
    local TARGET=$2

    set-var    OPENTURNS_HOME    $PREFIX

    add-to-var CMAKE_PREFIX_PATH $PREFIX/lib/cmake
    add-to-var LD_LIBRARY_PATH   $PREFIX/lib
    add-to-var PYTHONPATH        \
               $PREFIX/lib/python$PYTHON_VERSION/site-packages/
}

function s-openturns-mingw-env()
{
    local PREFIX=$1
    local TARGET=$2

    set-var    OPENTURNS_HOME    $PREFIX
    set-var    OT_ROOT_DIR       $PREFIX

    add-to-var PATH              $PREFIX/bin
    add-to-var CMAKE_PREFIX_PATH $PREFIX/lib/cmake
    add-to-var LD_LIBRARY_PATH   $PREFIX/lib
    add-to-var PYTHONPATH        \
               $PREFIX/lib/python$PYTHON_VERSION/site-packages/
}

function s-openturns-config-options()
{
    local PREFIX=$1
    local TARGET=$2
    local VARIANT=$3

    echo -DCMAKE_INSTALL_PREFIX=$PREFIX
    echo -DUSE_SPHINX=OFF
    echo -DUSE_DOXYGEN=OFF
    echo -DPYTHON_EXECUTABLE=$(command -v python$PYTHON_VERSION)
}

function s-openturns-mingw-config-options()
{
    local PREFIX=$1
    local TARGET=$2
    local VARIANT=$3

    local PYVER=$(python --version|cut -d' ' -f2|cut -d '.' -f 1,2)
    echo -Wno-dev
	echo -DCMAKE_BUILD_TYPE=Release
	echo -DCMAKE_INSTALL_PREFIX=${PREFIX}
	echo -DPython_EXECUTABLE=${MINGW_PREFIX}/bin/python
	echo -DUSE_SPHINX=OFF 
	echo -DPython_LIBRARY=${MINGW_PREFIX}/lib/libpython${PYVER}.dll.a
	echo -DCMAKE_UNITY_BUILD=ON -DCMAKE_UNITY_BUILD_BATCH_SIZE=32
	echo -DUSE_TBB=OFF 
	echo -DSWIG_COMPILE_FLAGS="-O1 -Wno-unused-parameter -Wno-shadow"
    echo -DUSE_DOXYGEN=OFF
}

function s-openturns-config()
{
    local PREFIX=$1
    local TARGET=$2
    local VARIANT=$3

    local OPTIONS=()
    get-config-options OPTIONS $PREFIX $TARGET $VARIANT

    cmake "${OPTIONS[@]}" ../src
}

function s-openturns-mingw-config()
{
    local PREFIX=$1
    local TARGET=$2
    local VARIANT=$3

    local OPTIONS=()
    get-config-options OPTIONS $PREFIX $TARGET $VARIANT

    CFLAGS+=" -Wall -Wextra -Wpedantic -Wshadow -D_GLIBCXX_ASSERTIONS -Wno-deprecated-declarations -Wno-calloc-transposed-args" \
    cmake "${OPTIONS[@]}" ../src
}

function s-openturns-build()
{
    local PREFIX=$1
    local TARGET=$2

    make -j$SCBI_JOBS
}

function s-openturns-mingw-build()
{
    local PREFIX=$1
    local TARGET=$2

    cmake --build .
}

function s-openturns-install()
{
    local PREFIX=$1
    local TARGET=$2

    make install
}

function s-openturns-mingw-install()
{
    local PREFIX=$1
    local TARGET=$2

    cmake --install .
}

function s-openturns-prefix()
{
    echo NONE
}
